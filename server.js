 /******************************************************
 * PLEASE DO NOT EDIT THIS FILE
 * the verification process may break
 * ***************************************************/

'use strict';

var express = require('express');
var app = express();

if (!process.env.DISABLE_XORIGIN) {
  app.use(function(req, res, next) {
    var allowedOrigins = ['https://narrow-plane.gomix.me', 'https://www.freecodecamp.com'];
    var origin = req.headers.origin || '*';
    if(!process.env.XORIG_RESTRICT || allowedOrigins.indexOf(origin) > -1){
         console.log(origin);
         res.setHeader('Access-Control-Allow-Origin', origin);
         res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
    }
    next();
  });
}

app.use('/public', express.static(process.cwd() + '/public'));

  
app.route('/')
    .get(function(req, res) {
		  res.sendFile(process.cwd() + '/views/index.html');
    })

var urlMap = {}

app.use('/new', function(req, res, next) {  // GET 'http://www.example.com/admin/new'
  var urlOutput = {}
  urlOutput["original_url"] = (req.path).slice(1) // removes the initial '/'
  
  do {
    // generate random math number between 1-10000
  }
  while(!urlMap.hasOwnProperty(generatedKey))
    
  res.type('txt').send("url = "+req.path)
  next();
});

// app.route('/new')
//     .get(function(req, res) {
//       res.type('txt').send("url = "+req.originalUrl)
// })

/*app.get(function(req,res){
  
})*/ 



// Respond not found to all the wrong routes
app.use(function(req, res, next){
  res.status(404);
  res.type('txt').send('Not found');
});

// Error Middleware
app.use(function(err, req, res, next) {
  if(err) {
    res.status(err.status || 500)
      .type('txt')
      .send(err.message || 'SERVER ERROR');
  }  
})

app.listen(process.env.PORT, function () {
  console.log('Node.js listening ...');
});

